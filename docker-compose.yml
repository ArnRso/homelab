version: "3.9"
networks:
  default:
    name: nginx-network
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID
x-common-keys-core: &common-keys-core
  security_opt:
    - no-new-privileges:true
  restart: always
x-common-keys-apps: &common-keys-apps
  security_opt:
    - no-new-privileges:true
  restart: always
x-common-keys-media: &common-keys-media
  security_opt:
    - no-new-privileges:true
  restart: always

services:
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx
    <<: *common-keys-core
    restart: always
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - $DOCKERDIR/appdata/nginx-proxy-manager/data:/data
      - $DOCKERDIR/appdata/letsencrypt:/etc/letsencrypt
    environment:
      <<: *default-tz-puid-pgid

  portainer:
    <<: *common-keys-core
    container_name: portainer
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/appdata/portainer/data:/data
    environment:
      - TZ=$TZ

  heimdall:
    <<: *common-keys-core
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    volumes:
      - $DOCKERDIR/appdata/heimdall:/config
    environment:
      <<: *default-tz-puid-pgid

  qbittorrent:
    <<: *common-keys-apps
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    volumes:
      - $DOCKERDIR/appdata/qbittorrent:/config
      - $DATADIR/$DOWNLOADS_FOLDER:/data/downloads
      - $USERDIR:/data
    environment:
      <<: *default-tz-puid-pgid
      UMASK_SET: 2

  prowlarr:
    <<: *common-keys-apps
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    volumes:
      - $DOCKERDIR/appdata/prowlarr:/config
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid

  radarr:
    <<: *common-keys-media
    image: lscr.io/linuxserver/radarr:nightly
    container_name: radarr
    volumes:
      - $DOCKERDIR/appdata/radarr:/config
      - $DATADIR/temp/appdata/radarr/MediaCover:/config/MediaCover
      - $DATADIR:/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid

  sonarr:
    <<: *common-keys-media
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    volumes:
      - $DOCKERDIR/appdata/sonarr:/config
      - $DATADIR/temp/appdata/sonarr/MediaCover:/config/MediaCover
      - $DATADIR:/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid

  readarr:
    <<: *common-keys-media
    image: hotio/readarr:nightly
    container_name: readarr
    volumes:
      - $DOCKERDIR/appdata/readarr:/config
      - $DATADIR:/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid
      UMASK: 2

  glances:
    <<: *common-keys-apps
    image: nicolargo/glances:latest
    container_name: glances
    pid: host
    volumes:
      - $DOCKERDIR/appdata/glances/glances.conf:/glances/conf/glances.conf
      - $USERDIR:/data/home:ro
      - /media/data:/data/data:ro
    environment:
      # GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      # GLANCES_OPT: "--export influxdb"
      GLANCES_OPT: "-w"
      DOCKER_HOST: unix:///var/run/docker.sock

  dozzle:
    <<: *common-keys-apps
    image: amir20/dozzle:latest
    container_name: dozzle
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  filebrowser:
    <<: *common-keys-core
    image: filebrowser/filebrowser
    container_name: filebrowser
    volumes:
      - $DOCKERDIR/appdata/filebrowser:/config
      - /media:/data/media
      - $USERDIR:/srv
    environment:
      <<: *default-tz-puid-pgid

  # speedtest-tracker:
  #   <<: *common-keys-core # See EXTENSION FIELDS at the top
  #   container_name: speedtest-tracker
  #   image: 'ghcr.io/alexjustesen/speedtest-tracker:latest'
  #   volumes:
  #     - '$DOCKERDIR/appdata/speedtest-tracker:/config'
  #   environment:
  #     <<: *default-tz-puid-pgid

  whoami:
    image: "traefik/whoami"
    container_name: whoami

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: watchtower
    restart: always

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      <<: *default-tz-puid-pgid
    volumes:
      - $DOCKERDIR/appdata/jackett:/config
      - $DATADIR/$DOWNLOADS_FOLDER:/downloads
    restart: always

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Paris
    restart: always

  uptime-kuma:
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    volumes:
      - $DOCKERDIR/appdata/uptime-kuma-data:/app/data
    restart: always

  # sabnzbd:
  #   image: lscr.io/linuxserver/sabnzbd:latest
  #   container_name: sabnzbd
  #   environment:
  #     <<: *default-tz-puid-pgid
  #   volumes:
  #     - $DOCKERDIR/appdata/sabnzbd:/config
  #     - $DATADIR/$DOWNLOADS_FOLDER:/downloads #optional
  #     - $DATADIR/$DOWNLOADS_FOLDER/incomplete:/incomplete-downloads #optional
  #   restart: always

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - $DOCKERDIR/appdata/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    network_mode: host

  onlyfood:
    build: "./dockerfiles/php8-1-apache"
    restart: "on-failure"
    container_name: "onlyfood"
    volumes:
      - "$DOCKERDIR/appdata/onlyfood:/var/www/html"
      - "$DOCKERDIR/conf/php8-1/ini/php.ini:/usr/local/etc/php/php.ini"
      - "$DOCKERDIR/conf/vhost/vhost.conf:/etc/apache2/sites-enabled/000-default.conf"

  mailer:
    container_name: mailer
    image: schickling/mailcatcher
    ports: [ 1025, 1080 ]

  database:
    image: postgres:13-alpine
    container_name: onlyfood-db
    environment:
      POSTGRES_DB: app
      POSTGRES_PASSWORD: ChangeMe
      POSTGRES_USER: symfony
    volumes:
      - $DOCKERDIR/appdata/onlyfooddb:/var/lib/postgresql/data:rw
  # nextcloud:
  #   image: lscr.io/linuxserver/nextcloud:latest
  #   container_name: nextcloud
  #   environment:
  #     <<: *default-tz-puid-pgid
  #   volumes:
  #     - $DOCKERDIR/appdata/homeassistant/config:/config
  #     - $DOCKERDIR/appdata/homeassistant/data:/data
  #     - $DATADIR:/datadir
  #   restart: always

  # grocy:
  #   image: lscr.io/linuxserver/grocy:v4.0.3-ls215
  #   container_name: grocy
  #   volumes:
  #     - $DOCKERDIR/appdata/grocy/config:/config
  #   restart: unless-stopped
  #   environment:
  #     <<: *default-tz-puid-pgid

  # hammond:
  #   container_name: hammond
  #   image: alfhou/hammond:v0.0.21
  #   volumes:
  #     - $DOCKERDIR/appdata/hammond/config:/config
  #     - $DOCKERDIR/appdata/hammond/assets:/assets
  #     - /etc/timezone:/etc/timezone
  #     - /etc/localtime:/etc/localtime
  #   environment:
  #     <<: *default-tz-puid-pgid
  #   restart: unless-stopped

  # proxitok:
  #   container_name: proxitok
  #   image: ghcr.io/pablouser1/proxitok:master
  #   restart: unless-stopped
  #   environment:
  #     - "LATTE_CACHE=/cache"
  #     - "API_CACHE=redis"
  #     - "REDIS_HOST=proxitok-redis"
  #     - "REDIS_PORT=6379"
  #     - "API_SIGNER=remote"
  #     - "API_SIGNER_URL=http://proxitok-signer:8080/signature"
  #   volumes:
  #     - "proxitok-cache:/cache"
  #   depends_on:
  #     - proxitok-redis
  #     - proxitok-signer
  # proxitok-redis:
  #   container_name: proxitok-redis
  #   image: redis:7-alpine
  #   restart: unless-stopped
  #   command: redis-server --save 60 1 --loglevel warning
  # proxitok-signer:
  #   container_name: proxitok-signer
  #   image: ghcr.io/pablouser1/signtok:master
