version: "3.9"

networks:
  default:
    name: traefik
    external: true

services:
  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    security_opt:
      - no-new-privileges:true
    restart: always
    volumes:
      - ./data/prowlarr:/config
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)
      - traefik.http.routers.prowlarr.service=prowlarr
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.tls.certresolver=letsencryptresolver

  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    security_opt:
      - no-new-privileges:true
    restart: always
    volumes:
      - ./data/sonarr:/config
      - $DATADIR/temp/appdata/sonarr/MediaCover:/config/MediaCover
      - $DATADIR:/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.tls.certresolver=letsencryptresolver

  readarr:
    image: hotio/readarr:nightly
    container_name: readarr
    security_opt:
      - no-new-privileges:true
    restart: always
    volumes:
      - ./data/readarr:/config
      - $DATADIR:/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      UMASK: 2
    labels:
      - traefik.enable=true
      - traefik.http.routers.readarr.entrypoints=websecure
      - traefik.http.routers.readarr.rule=Host(`readarr.${DOMAIN}`)
      - traefik.http.routers.readarr.service=readarr
      - traefik.http.services.readarr.loadbalancer.server.port=8787
      - traefik.http.routers.readarr.tls.certresolver=letsencryptresolver

  radarr:
    image: lscr.io/linuxserver/radarr:nightly
    container_name: radarr
    security_opt:
      - no-new-privileges:true
    restart: always
    volumes:
      - ./data/radarr:/config
      - $DATADIR/temp/appdata/radarr/MediaCover:/config/MediaCover
      - $DATADIR:/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.tls.certresolver=letsencryptresolver
